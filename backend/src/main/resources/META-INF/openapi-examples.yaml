# OpenAPI examples for the Robot Wars API
components:
  examples:
    # Battle Examples
    CreateBattleRequest:
      summary: "Create a new battle"
      description: "Example request to create a new battle with custom dimensions"
      value:
        name: "Epic Robot Showdown"
        width: 60
        height: 40
        robotMovementTimeSeconds: 1.5

    BattleResponse:
      summary: "Battle information"
      description: "Example battle response with all details"
      value:
        id: "battle-123e4567-e89b-12d3-a456-556642440000"
        name: "Epic Robot Showdown"
        arenaWidth: 60
        arenaHeight: 40
        robotMovementTimeSeconds: 1.5
        state: "WAITING_ON_ROBOTS"
        robots: []
        walls: []
        winnerId: null
        winnerName: null

    # Robot Examples
    RegisterRobotRequest:
      summary: "Register a robot"
      description: "Example request to register a new robot"
      value:
        name: "DestroyerBot"

    RobotResponse:
      summary: "Robot information"
      description: "Example robot response with position and status"
      value:
        id: "robot-456def78-9abc-123d-e456-789012345678"
        name: "DestroyerBot"
        battleId: "battle-123e4567-e89b-12d3-a456-556642440000"
        positionX: 25
        positionY: 30
        direction: "NORTH"
        status: "IDLE"
        targetBlocks: 0
        blocksRemaining: 0
        hitPoints: 100
        maxHitPoints: 100

    RobotStatusResponse:
      summary: "Robot status (without position)"
      description: "Example robot status response that doesn't reveal position"
      value:
        id: "robot-456def78-9abc-123d-e456-789012345678"
        name: "DestroyerBot"
        battleId: "battle-123e4567-e89b-12d3-a456-556642440000"
        direction: "NORTH"
        status: "IDLE"
        targetBlocks: 0
        blocksRemaining: 0
        hitPoints: 85
        maxHitPoints: 100

    # Action Examples
    MoveRequest:
      summary: "Move robot request"
      description: "Example request to move a robot"
      value:
        direction: "NORTH"
        blocks: 3

    RadarRequest:
      summary: "Radar scan request"
      description: "Example request to perform a radar scan"
      value:
        range: 8

    RadarResponse:
      summary: "Radar scan results"
      description: "Example radar scan response with detections"
      value:
        range: 8
        detections:
          - x: 25
            y: 27
            type: "WALL"
            details: "Wall segment detected"
          - x: 30
            y: 35
            type: "ROBOT"
            details: "Enemy robot: CrusherBot"

    LaserRequest:
      summary: "Fire laser request"
      description: "Example request to fire a laser"
      value:
        direction: "EAST"
        range: 15

    LaserHitResponse:
      summary: "Laser hit response"
      description: "Example response when laser hits a robot"
      value:
        hit: true
        hitRobotId: "robot-789abc12-def3-456g-h789-123456789012"
        hitRobotName: "TargetBot"
        damageDealt: 20
        range: 15
        direction: "EAST"
        laserPath:
          - x: 25
            y: 30
          - x: 26
            y: 30
          - x: 27
            y: 30
          - x: 28
            y: 30
        hitPosition:
          x: 28
          y: 30
        blockedBy: "ROBOT"

    LaserMissResponse:
      summary: "Laser miss response"
      description: "Example response when laser misses or is blocked"
      value:
        hit: false
        hitRobotId: null
        hitRobotName: null
        damageDealt: 0
        range: 15
        direction: "EAST"
        laserPath:
          - x: 25
            y: 30
          - x: 26
            y: 30
          - x: 27
            y: 30
          - x: 28
            y: 30
          - x: 29
            y: 30
        hitPosition: null
        blockedBy: "WALL"

    # Error Examples
    ErrorResponse:
      summary: "Error response"
      description: "Example error response"
      value:
        message: "Robot not found with the given ID"

    ValidationErrorResponse:
      summary: "Validation error"
      description: "Example validation error response"
      value:
        message: "Invalid direction. Must be one of: NORTH, SOUTH, EAST, WEST, NE, NW, SE, SW"

    ConflictErrorResponse:
      summary: "Conflict error"
      description: "Example conflict error response"
      value:
        message: "Robot cannot move - path is blocked by a wall"

    # Specific validation error examples
    RobotNameRequiredError:
      summary: "Robot name required error"
      description: "Error when robot name is missing"
      value:
        message: "Robot name is required and cannot be empty"

    RobotNameTooLongError:
      summary: "Robot name too long error"
      description: "Error when robot name exceeds maximum length"
      value:
        message: "Robot name must be 50 characters or less"

    InvalidRobotNameError:
      summary: "Invalid robot name characters error"
      description: "Error when robot name contains invalid characters"
      value:
        message: "Robot name can only contain letters, numbers, spaces, hyphens, and underscores"

    BattleIdRequiredError:
      summary: "Battle ID required error"
      description: "Error when battle ID is missing"
      value:
        message: "Battle ID is required and cannot be empty"

    RobotIdRequiredError:
      summary: "Robot ID required error"
      description: "Error when robot ID is missing"
      value:
        message: "Robot ID is required and cannot be empty"

    InvalidBattleRobotIdError:
      summary: "Invalid battle or robot ID error"
      description: "Error when battle or robot ID is invalid"
      value:
        message: "Invalid battle ID or robot ID"

    MoveRequestRequiredError:
      summary: "Move request required error"
      description: "Error when move request is missing"
      value:
        message: "Move request is required"

    DirectionRequiredError:
      summary: "Direction required error"
      description: "Error when direction is missing"
      value:
        message: "Direction is required and cannot be empty"

    InvalidDirectionError:
      summary: "Invalid direction error"
      description: "Error when direction is invalid"
      value:
        message: "Invalid direction. Must be one of: NORTH, SOUTH, EAST, WEST, NE, NW, SE, SW"

    BlocksRangeError:
      summary: "Blocks range error"
      description: "Error when blocks value is out of range"
      value:
        message: "Number of blocks must be greater than 0"

    BlocksMaxError:
      summary: "Blocks maximum error"
      description: "Error when blocks value exceeds maximum"
      value:
        message: "Number of blocks must be 10 or less"

    RadarRangeError:
      summary: "Radar range error"
      description: "Error when radar range is invalid"
      value:
        message: "Radar range must be greater than 0"

    RadarMaxError:
      summary: "Radar maximum error"
      description: "Error when radar range exceeds maximum"
      value:
        message: "Radar range must be 20 or less"

    LaserDirectionRequiredError:
      summary: "Laser direction required error"
      description: "Error when laser direction is missing"
      value:
        message: "Laser direction is required and cannot be empty"

    InvalidLaserDirectionError:
      summary: "Invalid laser direction error"
      description: "Error when laser direction is invalid"
      value:
        message: "Invalid laser direction. Must be one of: NORTH, SOUTH, EAST, WEST, NE, NW, SE, SW"

    LaserRangeError:
      summary: "Laser range error"
      description: "Error when laser range is invalid"
      value:
        message: "Laser range must be greater than 0"

    LaserMaxError:
      summary: "Laser maximum error"
      description: "Error when laser range exceeds maximum"
      value:
        message: "Laser range must be 50 or less"
