# Application configuration
quarkus.application.name=robot-wars-backend
quarkus.application.version=1.0.0-SNAPSHOT

# HTTP configuration
quarkus.http.port=8080
quarkus.http.cors=true
quarkus.http.cors.origins=*
quarkus.http.cors.methods=GET,POST,PUT,DELETE,OPTIONS
quarkus.http.cors.headers=Content-Type,Authorization

# WebSocket configuration
quarkus.websocket.dispatch-to-worker=true

# Virtual threads configuration
quarkus.thread-pool.type=virtual
quarkus.vertx.prefer-virtual-threads=true
quarkus.resteasy-reactive.virtual-threads=true

# Native build configuration
quarkus.native.container-build=false
quarkus.native.builder-image=quay.io/quarkus/ubi-quarkus-mandrel-builder-image:22.3-java21
quarkus.native.resources.includes=META-INF/**/*

# Container image configuration
quarkus.container-image.build=false
quarkus.container-image.group=example
quarkus.container-image.name=${quarkus.application.name}
quarkus.container-image.tag=${quarkus.application.version}

# Kubernetes configuration
quarkus.kubernetes.part-of=${quarkus.application.name}
quarkus.kubernetes.name=${quarkus.application.name}
quarkus.kubernetes.version=${quarkus.application.version}
quarkus.kubernetes.labels.app=${quarkus.application.name}
quarkus.kubernetes.labels.version=${quarkus.application.version}
quarkus.kubernetes.expose=true
quarkus.kubernetes.ports.http.container-port=8080

# Health check configuration
quarkus.health.openapi.included=true

# Dev services configuration for testing
quarkus.devservices.enabled=true
# Enable specific dev services as needed (examples below)
# quarkus.datasource.devservices.enabled=true
# quarkus.mongodb.devservices.enabled=true
# quarkus.redis.devservices.enabled=true
# quarkus.kafka.devservices.enabled=true

# Logging configuration
quarkus.log.console.enable=true
quarkus.log.console.format=%d{HH:mm:ss} %-5p [%c{2.}] (%t) %s%e%n
quarkus.log.console.level=INFO
quarkus.log.category."com.example".level=DEBUG
