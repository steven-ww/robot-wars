name: Frontend CI

on:
  push:
    branches: [ main ]
    paths:
      - 'frontend/**'
      - '.github/workflows/frontend-ci.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'frontend/**'
      - '.github/workflows/frontend-ci.yml'

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install dependencies
      run: |
        cd frontend
        npm ci

    - name: Run linting
      run: |
        cd frontend
        npm run lint

    - name: Check code formatting
      run: |
        cd frontend
        npm run format:check

    - name: Run tests (including Cucumber BDD tests)
      run: |
        cd frontend
        npm test -- --watchAll=false --passWithNoTests

    - name: Build
      env:
        REACT_APP_BACKEND_URL: ${{ vars.BACKEND_URL || 'http://localhost:8080' }}
      run: |
        cd frontend
        npm run build

    - name: Upload build artifact
      uses: actions/upload-artifact@v4
      with:
        name: build
        path: frontend/build

  deploy:
    name: Deploy to S3
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    permissions:
      id-token: write
      contents: read
    
    steps:
    - name: Download build artifact
      uses: actions/download-artifact@v4
      with:
        name: build
        path: build
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
        aws-region: af-south-1
        web-identity-token-file: ${{ env.ACTIONS_ID_TOKEN_REQUEST_TOKEN }}
    
    - name: Deploy to S3
      run: |
        # Extract bucket name from ARN if provided, otherwise use bucket name directly
        if [[ "${{ vars.S3_BUCKET_ARN }}" == arn:aws:s3:::* ]]; then
          BUCKET_NAME=$(echo "${{ vars.S3_BUCKET_ARN }}" | cut -d':' -f6)
        else
          BUCKET_NAME="${{ vars.S3_BUCKET_NAME || vars.S3_BUCKET_ARN }}"
        fi
        
        echo "Deploying to S3 bucket: $BUCKET_NAME"
        aws s3 sync build/ s3://$BUCKET_NAME/ --delete
        
    - name: Invalidate CloudFront (optional)
      if: vars.CLOUDFRONT_DISTRIBUTION_ID
      run: |
        aws cloudfront create-invalidation \
          --distribution-id ${{ vars.CLOUDFRONT_DISTRIBUTION_ID }} \
          --paths "/*"
